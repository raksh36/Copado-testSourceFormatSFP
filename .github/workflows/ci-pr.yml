# Unique name for this workflow
name: CI on PR

# Workflow starts when receiving custom event sent by CI workflow
on:
    pull_request:
        types: [opened, edited, synchronize, reopened]
        branches: [INT,UAT,main]


# Jobs to be executed
jobs:

    scratch-org-test:
        runs-on: ubuntu-latest
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4

            # Run PMD scan
            - name: 'Run PMD scan'
              uses: pmd/pmd-github-action@v2.0.0
              id: pmd
              with:
                  version: '6.55.0'
                  sourcePath: 'force-app'
                  rulesets: 'ruleset.xml'

            # Check for PMD violations
            - name: 'Check for PMD violations'
              if: steps.pmd.outputs.violations != 0
              run: exit 1

            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  npm install @salesforce/cli --location=global
                  nodeInstallPath=$(npm config get prefix)
                  echo "$nodeInstallPath/bin" >> $GITHUB_PATH
                  sf --version

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: |
                  echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
                  if [ $secretFileSize == 1 ]; then
                      echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
                      exit 1;
                  fi

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d

            # Create scratch org
            - name: 'Create scratch org'
              run: sf org create scratch -f config/project-scratch-def.json -a scratch-org -d -y 1

            # Deploy source to scratch org
            - name: 'Push source to scratch org'
              run: sf project deploy start

            # Run Apex tests in scratch org
            - name: 'Run Apex tests'
              run: sf apex test run -c -r human -d ./tests/apex -w 20

            # Housekeeping
            - name: 'Delete scratch org'
              if: always()
              run: sf org delete scratch -p -o scratch-org

    trigger-packaging:
        runs-on: ubuntu-latest
        needs: scratch-org-test
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4

            # Check for package changes using git diff
            - name: 'Check for package changes'
              id: checkForChanges
              run: |
                  git fetch origin $GITHUB_BASE_REF --depth=1
                  changedPaths=$( git diff-tree --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
                  set +e
                  hasChanges='false'
                  if [ $(echo "$changedPaths" | grep -c '^force-app') == 1 ]; then
                      hasChanges='true'
                  fi
                  echo "hasChanges=$hasChanges" >> $GITHUB_OUTPUT

            # Trigger packaging PR workflow
            - name: 'Trigger packaging PR workflow if needed'
              uses: peter-evans/repository-dispatch@v3
              if: steps.checkForChanges.outputs.hasChanges == 'true'
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  event-type: start-packaging-pr
                  client-payload: '{ "ref": "${{ github.ref }}", "sha": "${{ github.sha }}" }'